AWSTemplateFormatVersion: 2010-09-09

Description: Single EC2 with VPC in a single region

Parameters:
  ProjectNick:
    Description: Project nick name
    Type: String
    Default: myproject
    AllowedPattern: '[a-z0-9]*'
  VpcCidrBlock:
    Description: VPC CidrBlock
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  SubNetCidrBlock:
    Description: Subnet CidrBlock
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      Tags:
        - Key: Name
          Value: !Join [ "-", [ 'vpc', !Ref ProjectNick ] ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "-", [ 'ig', !Ref ProjectNick ] ]

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC  

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ 'rt', !Ref ProjectNick ] ]

  Route:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: "us-east-1a"
      CidrBlock: !Ref SubNetCidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [ "-", [ 'subnet', !Ref ProjectNick ] ]

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0
      GroupName: !Join [ "-", [ 'segr', !Ref ProjectNick ] ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ed9277fb7eb570c9
      InstanceType: t2.micro
      SubnetId: !Ref Subnet
      SecurityGroupIds: 
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Join [ "-", [ 'ec2', !Ref ProjectNick ] ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          service httpd start  
          echo "<html><body><h1>Hello World!</h1> This message is provided to you by Region ${AWS::Region}.</body></html>" > /var/www/html/index.html

Outputs:
  PublicIp:
    Description: EC2 Instance Public Ip
    Value: !GetAtt EC2.PublicIp 